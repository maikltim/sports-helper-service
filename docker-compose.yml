version: '3.8'

services:

  frontend:
    build: ./client
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - api
    volumes:
     - frontend_node_modules:/app/node_modules
     - ./client:/app
    networks:
      - my_network

  #test container  
  #test-ubuntu:
  #  build: ./ubuntu
  #  networks:
  #    - my_network
   
  
  api:
    build: ./server
    restart: always
    ports:
      - '4200:4200'
    depends_on:
      - mongo
    volumes:
     - api_node_modules:/app/node_modules
     - ./server:/app
    networks:
      - my_network
  
  mongo:
    image: mongo:3.6.8
    restart: always
    ports:
     - 8081:8081
    volumes:
     - mongo_data:/data/db
    networks:
      - my_network
    #environment:
      #ME_CONFIG_MONGODB_ADMINUSERNAME: root
      #ME_CONFIG_MONGODB_ADMINPASSWORD: example
      #ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      #environment:
      #MONGO_INITDB_ROOT_USERNAME: root
      #MONGO_INITDB_ROOT_PASSWORD: example

networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          
volumes:
  mongo_data:
  frontend_node_modules:  
  api_node_modules:

  #ngo-express:
  #image: mongo-express
  #restart: always
  #ports:
  #  - 8081:8081
  #environment:
  #  ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #  ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #  ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/


  

    